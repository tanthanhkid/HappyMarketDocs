#!/usr/bin/env node

/**
 * Script test ƒë·ªÉ ki·ªÉm tra t√≠nh nƒÉng c·∫≠p nh·∫≠t m·ª•c l·ª•c BAI-HOC
 */

const { getAllLessons, updateIndexFile, generateTableOfContents } = require('./update-bai-hoc-toc');

async function testTocUpdate() {
    console.log('üß™ B·∫Øt ƒë·∫ßu test c·∫≠p nh·∫≠t m·ª•c l·ª•c BAI-HOC...\n');
    
    try {
        // Test 1: L·∫•y danh s√°ch b√†i h·ªçc
        console.log('1Ô∏è‚É£ Test l·∫•y danh s√°ch b√†i h·ªçc...');
        const lessons = await getAllLessons();
        console.log(`‚úÖ T√¨m th·∫•y ${lessons.length} b√†i h·ªçc`);
        
        if (lessons.length > 0) {
            console.log('üìã Danh s√°ch b√†i h·ªçc:');
            lessons.forEach((lesson, index) => {
                console.log(`   ${index + 1}. ${lesson.title} (${lesson.slug})`);
            });
        }
        
        // Test 2: T·∫°o m·ª•c l·ª•c
        console.log('\n2Ô∏è‚É£ Test t·∫°o m·ª•c l·ª•c...');
        const toc = generateTableOfContents(lessons);
        console.log('‚úÖ ƒê√£ t·∫°o m·ª•c l·ª•c th√†nh c√¥ng');
        console.log('üìÑ Preview m·ª•c l·ª•c:');
        console.log(toc.substring(0, 500) + '...');
        
        // Test 3: C·∫≠p nh·∫≠t file _index.md
        console.log('\n3Ô∏è‚É£ Test c·∫≠p nh·∫≠t file _index.md...');
        await updateIndexFile(lessons);
        console.log('‚úÖ ƒê√£ c·∫≠p nh·∫≠t file _index.md th√†nh c√¥ng');
        
        console.log('\nüéâ T·∫•t c·∫£ test ƒë·ªÅu th√†nh c√¥ng!');
        
    } catch (error) {
        console.error('‚ùå Test th·∫•t b·∫°i:', error);
        process.exit(1);
    }
}

// Ch·∫°y test
testTocUpdate();
